@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --background: hsl(0, 0%, 100%);
  --foreground: hsl(240, 10%, 3.9%);
  --muted: hsl(240, 4.8%, 95.9%);
  --muted-foreground: hsl(240, 5%, 64.9%);
  --popover: hsl(0, 0%, 100%);
  --popover-foreground: hsl(240, 10%, 3.9%);
  --card: hsl(0, 0%, 100%);
  --card-foreground: hsl(240, 10%, 3.9%);
  --border: hsl(240, 5.9%, 90%);
  --input: hsl(240, 5.9%, 90%);
  --primary: hsl(0, 84%, 60%);
  --primary-foreground: hsl(0, 0%, 98%);
  --secondary: hsl(240, 4.8%, 95.9%);
  --secondary-foreground: hsl(240, 9%, 10%);
  --accent: hsl(240, 4.8%, 95.9%);
  --accent-foreground: hsl(240, 9%, 10%);
  --destructive: hsl(0, 84.2%, 60.2%);
  --destructive-foreground: hsl(0, 0%, 98%);
  --ring: hsl(240, 10%, 3.9%);
  --radius: 0.5rem;
  
  /* StreamMax Custom Colors */
  --netflix-red: hsl(0, 84%, 60%);
  --dark-primary: hsl(248, 39%, 16%);
  --dark-secondary: hsl(249, 26%, 15%);
  --dark-tertiary: hsl(0, 0%, 18%);
}

.dark {
  --background: hsl(248, 39%, 16%);
  --foreground: hsl(0, 0%, 98%);
  --muted: hsl(249, 26%, 15%);
  --muted-foreground: hsl(240, 5%, 64.9%);
  --popover: hsl(248, 39%, 16%);
  --popover-foreground: hsl(0, 0%, 98%);
  --card: hsl(249, 26%, 15%);
  --card-foreground: hsl(0, 0%, 98%);
  --border: hsl(240, 3.7%, 15.9%);
  --input: hsl(240, 3.7%, 15.9%);
  --primary: hsl(0, 84%, 60%);
  --primary-foreground: hsl(0, 0%, 98%);
  --secondary: hsl(240, 3.7%, 15.9%);
  --secondary-foreground: hsl(0, 0%, 98%);
  --accent: hsl(240, 3.7%, 15.9%);
  --accent-foreground: hsl(0, 0%, 98%);
  --destructive: hsl(0, 62.8%, 30.6%);
  --destructive-foreground: hsl(0, 0%, 98%);
  --ring: hsl(240, 4.9%, 83.9%);
}

@layer base {
  * {
    @apply border-border;
  }
  
  body {
    @apply bg-[var(--dark-primary)] text-white font-sans antialiased;
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif;
  }
  
  h1, h2, h3, h4, h5, h6 {
    font-family: 'Poppins', sans-serif;
  }
}

@layer utilities {
  .netflix-red {
    color: var(--netflix-red);
  }
  
  .bg-netflix-red {
    background-color: var(--netflix-red);
  }
  
  .bg-dark-primary {
    background-color: var(--dark-primary);
  }
  
  .bg-dark-secondary {
    background-color: var(--dark-secondary);
  }
  
  .bg-dark-tertiary {
    background-color: var(--dark-tertiary);
  }
  
  .text-netflix-red {
    color: var(--netflix-red);
  }
  
  .border-netflix-red {
    border-color: var(--netflix-red);
  }
  
  .gradient-overlay {
    background: linear-gradient(to right, var(--dark-primary), rgba(29, 25, 58, 0.9), transparent);
  }
  
  .hero-gradient {
    background: linear-gradient(135deg, var(--dark-primary) 0%, var(--dark-secondary) 50%, rgba(229, 9, 20, 0.1) 100%);
  }
}

/* Smooth scrolling */
html {
  scroll-behavior: smooth;
}

/* Custom scrollbar */
::-webkit-scrollbar {
  width: 8px;
}

::-webkit-scrollbar-track {
  background: var(--dark-secondary);
}

::-webkit-scrollbar-thumb {
  background: var(--netflix-red);
  border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
  background: hsl(0, 84%, 50%);
}

/* Loading animations */
@keyframes fadeIn {
  from { opacity: 0; transform: translateY(20px); }
  to { opacity: 1; transform: translateY(0); }
}

@keyframes slideInLeft {
  from { opacity: 0; transform: translateX(-50px); }
  to { opacity: 1; transform: translateX(0); }
}

@keyframes slideInRight {
  from { opacity: 0; transform: translateX(50px); }
  to { opacity: 1; transform: translateX(0); }
}

.animate-fade-in {
  animation: fadeIn 0.6s ease-out;
}

.animate-slide-in-left {
  animation: slideInLeft 0.6s ease-out;
}

.animate-slide-in-right {
  animation: slideInRight 0.6s ease-out;
}

/* Hide YouTube player UI elements completely */
.ytp-chrome-top,
.ytp-title,
.ytp-title-text,
.ytp-title-link,
.ytp-show-cards-title,
.ytp-watermark,
.ytp-gradient-top,
.ytp-chrome-top-buttons,
.ytp-chrome-controls {
  display: none !important;
  visibility: hidden !important;
  opacity: 0 !important;
  height: 0 !important;
  width: 0 !important;
  overflow: hidden !important;
}

/* Override YouTube iframe pointer events when using custom controls */
#youtube-player iframe {
  pointer-events: none;
}
